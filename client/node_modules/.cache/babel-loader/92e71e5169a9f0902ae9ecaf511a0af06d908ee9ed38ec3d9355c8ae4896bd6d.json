{"ast":null,"code":"var _jsxFileName = \"/Users/tom/Documents/GitHub/chartsJsDemo/client/src/App.js\",\n  _s = $RefreshSig$();\n// client/src/App.js\nimport React, { useState } from 'react';\nimport PriceChart from './components/PriceChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [symbol, setSymbol] = useState('BTC/USD');\n  const [useCluster0, setUseCluster0] = useState(false);\n  const [showWindow, setShowWindow] = useState(false);\n  const [useRaw, setUseRaw] = useState(false);\n\n  // Reset useRaw if symbol is not BTC\n  React.useEffect(() => {\n    if (symbol !== 'BTC/USD' && useRaw) setUseRaw(false);\n  }, [symbol]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 900,\n      margin: '0 auto',\n      padding: 24\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Crypto Price Visualization (MERN + Chart.js)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 12\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: symbol,\n        onChange: e => setSymbol(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"BTC/USD\",\n          children: \"BTC/USD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"ETH/USD\",\n          children: \"ETH/USD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginLeft: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: useCluster0,\n          onChange: e => setUseCluster0(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), ' ', \"Use MongoDB 8.0 Cluster\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginLeft: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: showWindow,\n          onChange: e => setShowWindow(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), ' ', \"Show 10-day Rolling Average\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), symbol === 'BTC/USD' && /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginLeft: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: useRaw,\n          onChange: e => setUseRaw(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), ' ', \"Use Raw Data\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PriceChart, {\n      symbol: symbol,\n      cluster: useCluster0 ? 0 : 1,\n      windowFn: showWindow ? 1 : 0,\n      useRaw: useRaw ? 1 : 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"noQgAhEI+ru6549uGSL4zMaNe7o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","PriceChart","jsxDEV","_jsxDEV","App","_s","symbol","setSymbol","useCluster0","setUseCluster0","showWindow","setShowWindow","useRaw","setUseRaw","useEffect","style","maxWidth","margin","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","value","onChange","e","target","marginLeft","type","checked","cluster","windowFn","_c","$RefreshReg$"],"sources":["/Users/tom/Documents/GitHub/chartsJsDemo/client/src/App.js"],"sourcesContent":["// client/src/App.js\nimport React, { useState } from 'react';\nimport PriceChart from './components/PriceChart';\n\nfunction App() {\n  const [symbol, setSymbol] = useState('BTC/USD');\n  const [useCluster0, setUseCluster0] = useState(false);\n  const [showWindow, setShowWindow] = useState(false);\n  const [useRaw, setUseRaw] = useState(false);\n\n  // Reset useRaw if symbol is not BTC\n  React.useEffect(() => {\n    if (symbol !== 'BTC/USD' && useRaw) setUseRaw(false);\n  }, [symbol]);\n\n  return (\n    <div style={{ maxWidth: 900, margin: '0 auto', padding: 24 }}>\n      <h1>Crypto Price Visualization (MERN + Chart.js)</h1>\n      <div style={{ marginBottom: 12 }}>\n        <select value={symbol} onChange={e => setSymbol(e.target.value)}>\n          <option value=\"BTC/USD\">BTC/USD</option>\n          <option value=\"ETH/USD\">ETH/USD</option>\n        </select>\n        <label style={{ marginLeft: 16 }}>\n          <input\n            type=\"checkbox\"\n            checked={useCluster0}\n            onChange={e => setUseCluster0(e.target.checked)}\n          />\n          {' '}Use MongoDB 8.0 Cluster\n        </label>\n        <label style={{ marginLeft: 16 }}>\n          <input\n            type=\"checkbox\"\n            checked={showWindow}\n            onChange={e => setShowWindow(e.target.checked)}\n          />\n          {' '}Show 10-day Rolling Average\n        </label>\n        {symbol === 'BTC/USD' && (\n          <label style={{ marginLeft: 16 }}>\n            <input\n              type=\"checkbox\"\n              checked={useRaw}\n              onChange={e => setUseRaw(e.target.checked)}\n            />\n            {' '}Use Raw Data\n          </label>\n        )}\n      </div>\n      <PriceChart symbol={symbol} cluster={useCluster0 ? 0 : 1} windowFn={showWindow ? 1 : 0} useRaw={useRaw ? 1 : 0} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}